<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lemo.vhrmaster.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.lemo.vhrmaster.bean.Employee">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="VARCHAR"/>
        <result column="idCard" property="idCard" jdbcType="VARCHAR"/>
        <association property="salary" javaType="com.lemo.vhrmaster.bean.Salary">
            <id column="sid" property="id" jdbcType="INTEGER"/>
            <result column="basicSalary2" property="basicSalary" jdbcType="INTEGER"/>
            <result column="bonus2" property="bonus" jdbcType="INTEGER"/>
            <result column="lunchSalary2" property="lunchSalary" jdbcType="INTEGER"/>
            <result column="trafficSalary2" property="trafficSalary" jdbcType="INTEGER"/>
            <result column="pensionBase2" property="pensionBase" jdbcType="INTEGER"/>
            <result column="pensionPer2" property="pensionPer" jdbcType="INTEGER"/>
        </association>
    </resultMap>
    <select id="querySalaryAll" resultType="java.util.Map">
       select  A.ID,A.name,A.gender,A.idCard,C.`basicSalary` as basicSalary2,C.`bonus` as bonus2,C.`lunchSalary` as lunchSalary2,
         C.`trafficSalary` as trafficSalary2, C.`pensionBase` as pensionBase2, C.`pensionPer` as pensionPer2,D.`name` as departmentname  from  vhr.employee A   LEFT JOIN vhr.empsalary B  ON A.ID=B.eid
                         LEFT join vhr.salary C On B.sid=C.id   LEFT join vhr.department D On A.departmentId=D.ID WHERE 1=1
        <if test="name!='' and  name!=null ">
            AND A.NAME LIKE  concat('%',#{name},'%')
        </if>
        <if test="departmentname!='' and  departmentname!=null ">
            AND D.NAME LIKE  concat('%',#{departmentname},'%')
        </if>
        <if test="start!=null ">
          ORDER BY A.ID LIMIT #{start},#{pagesize}
     </if>
    </select>
    <select id="getcountEmployee" resultType="Long">
        SELECT COUNT(1) FROM ( SELECT A.ID,A.name,A.gender,A.idCard,C.`basicSalary` as basicSalary2,C.`bonus` as bonus2,C.`lunchSalary` as lunchSalary2,
         C.`trafficSalary` as trafficSalary2, C.`pensionBase` as pensionBase2, C.`pensionPer` as pensionPer2,D.`name` as departmentname  from  vhr.employee A   LEFT JOIN vhr.empsalary B  ON A.ID=B.eid
                         LEFT join vhr.salary C On B.sid=C.id   LEFT join vhr.department D On A.departmentId=D.ID WHERE 1=1
        <if test="name!='' and  name!=null ">
            AND A.NAME LIKE  concat('%',#{name},'%')
        </if>
        <if test="departmentname!='' and  departmentname!=null ">
            AND D.NAME LIKE  concat('%',#{departmentname},'%')
        </if>
        ) T
    </select>
</mapper>